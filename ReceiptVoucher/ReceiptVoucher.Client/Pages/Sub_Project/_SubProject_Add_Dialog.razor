@inject ISnackbar _Snackbar
@rendermode InteractiveAuto
@inject HttpClient Http

<MudDialog Class="custom-modal" Style="width: 100vw; height: auto">
    <DialogContent>
        <EditForm Model="@SubProject" OnValidSubmit="Submit" Class="custom-form">
            <DataAnnotationsValidator />

            <MudTextField Label="الاسم" Immediate="true" @bind-Value="@SubProject.Name" Adornment="Adornment.End"  For="@(()=>SubProject.Name)" AdornmentColor="Color.Success"></MudTextField>

            <MudGrid>
                <MudItem xs="9">
                    <MudTextField Label="المدة"  Immediate="true" @bind-Value="@SubProject.Duration" Adornment="Adornment.End" For="@(()=>SubProject.Duration)" AdornmentColor="Color.Success"></MudTextField>
                </MudItem>
                <MudItem xs="3">
                    <MudTextField   Immediate="true" @bind-Value="@Unit" Adornment="Adornment.End"  AdornmentColor="Color.Success" ReadOnly></MudTextField>
                </MudItem>
            </MudGrid>
            
            <MudSelect Label="المشروع" @bind-Value="@SubProject.ProjectId" >
                <MudSelectItem Value="0">---  اختيار اسم المشروع ---</MudSelectItem>

                @foreach (var project in Projects)
                {
                    <MudSelectItem Value="@project.Id">@project.Name</MudSelectItem>


                }
            </MudSelect>


            @{
                if (SubProject.ProjectId != 0)
                {
                    var project = Projects.Where(x => x.Id == SubProject.ProjectId).FirstOrDefault();

                    if (project != null)
                    {

                        isActive = project.IsActive;

                        if (project.IsActive == false)
                        {
                            SubProject.IsActive = project.IsActive;
                        }

                    }

                }
            }


            <br />
            <MudTextField T="string" Label="الوصف" Variant="Variant.Text" For="@(()=>SubProject.Note)" @bind-Value="@SubProject.Note" Lines="2" />


             

            @if (isActive)
            {
                <MudCheckBox Label="حاله التفعيل" @bind-Value="@SubProject.IsActive" Dense="true" Color="Color.Success"></MudCheckBox>

            }
            else
            {
                <MudCheckBox Disabled  Label="حاله التفعيل" @bind-Value="@SubProject.IsActive" Dense="true" Color="Color.Success"></MudCheckBox>

            }

            
           


            @if(BtnName != ButtonTypes.Details)
            {
                <MudButton OnClick="Cancel" Class="custom-button">الغاء</MudButton>
                <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit" Class="custom-button">@BtnName</MudButton>
            }
           
            <br />

        </EditForm>
    </DialogContent>
  
    </MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public SubProject OriginalSubProject { get; set; }
    [Parameter] public string BtnName { get; set; }
    public SubProject SubProject { get; set; }
    public string Unit = "يوم";

    [Parameter] 
    public List<Project> Projects { get; set; }

   

    bool isActive = true;






    protected override void OnParametersSet()
    {
        if (OriginalSubProject == null)
        {
            SubProject = new SubProject();




        }
        else
        {
            SubProject = new SubProject
                {
                    Id = OriginalSubProject.Id,
                    Name = OriginalSubProject.Name,
                    ProjectId = OriginalSubProject.ProjectId, // Add this line
                    Duration = OriginalSubProject.Duration,
                    CreatedDate = OriginalSubProject.CreatedDate,
                    IsActive = OriginalSubProject.IsActive,
                    Note = OriginalSubProject.Note


                };
        }
    }


    async void Submit()
    {
        if (!string.IsNullOrWhiteSpace(SubProject.Name))
        {
            if (SubProject.Id == 0)
            {

                
                var response = await Http.PostAsJsonAsync("api/SubProjects/AddOneAsync", SubProject);
                if (response.IsSuccessStatusCode)
                {
                    _Snackbar.Add("تمت اضافه المشروع الفرعي بنجاح!", Severity.Success);
                }
                else
                {
                    _Snackbar.Add($"فشل في اضافه المشروع الفرعي: {response.StatusCode}", Severity.Error);
                }


               
            }
            else
            {


                var response = await Http.PutAsJsonAsync("api/SubProjects", SubProject);
                if (response.IsSuccessStatusCode)
                {
                    _Snackbar.Add("تم تعديل المشروع الفرعي بنجاح!", Severity.Success);
                }
                else
                {
                    _Snackbar.Add($"فشل في تعديل المشروع الفرعي: {response.StatusCode}", Severity.Error);
                }

               
            }

            MudDialog.Close(DialogResult.Ok(true));
            // Trigger the OnClose event
            OnClose.InvokeAsync(true);
        }
    }

    void Cancel() => MudDialog.Cancel();
}
