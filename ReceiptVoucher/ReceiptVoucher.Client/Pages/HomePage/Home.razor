@page "/home"
@using System.Security.Claims
@* @rendermode InteractiveAuto *@
@rendermode @(new InteractiveServerRenderMode(false) )


@* @attribute [Authorize] *@
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject NavigationManager _NavigationManager

<PageTitle>Makarim</PageTitle>


<br />
<!--اسم الصفحه-->
<p style=" margin-bottom:2% ;">
        <b style="color:dodgerblue;font-size:xx-large">|</b>
    <span class="mainTitle">
        <MudIcon Icon="@Icons.Material.Filled.Home" Size="Size.Large" Style="color:#566D7E ;margin-bottom:2px" />
        الصفحة الرئيسية
    </span>
</p>

<ReceiptVoucher.Client.Pages.AuthenticationPages.AuthenticationButton />

<ChartReports/>
    



@code {

    private string userRole = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        // var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        // var user = authState.User;

        // List<string> userRoles = user.FindAll(c => c.Type == "roles").Select(c => c.Value).ToList(); // Get all roles

        // if (!userRoles.Any(a=> a.Contains(RolesNames.Admin)))
        // {
        //     _NavigationManager.NavigateTo("/login");
        //     _NavigationManager.Refresh();
        // }
        
    }


}